<%- include('../../partials/header/current-upcoming') %>
<style>
    #avatar-head {
        width: 40px;
        height: 40px;
    }

    .gallery-container {
        max-width: 1024px;
        margin: 0 auto;
        padding: 2rem 1rem;
        text-align: center;
    }

    .media-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        gap: 1rem;
    }

    .media-item {
        cursor: pointer;
        position: relative;
        padding: 0;
        overflow: hidden;
    }

    .media-item-image {
        width: 100%;
        display: block;
        height: auto;
        object-fit: cover;
        border-radius: 6px;
        transition: transform 0.2s ease;
    }

    .media-item-image:hover {
        transform: scale(1.03);
    }

    .overlay {
        position: absolute;
        inset: 0;
        background: rgba(0, 0, 0, 0.65);
        color: white;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 0.5rem;
        opacity: 0;
        transition: opacity 200ms ease-in-out;
        pointer-events: none;
    }

    .media-item:hover .overlay {
        opacity: 1;
        pointer-events: auto;
    }

    .overlay-top {
        display: flex;
        justify-content: flex-start;
    }

    .overlay-top .avatar {
        width: 40px;
        height: 40px;
        border: 2px solid white;
        border-radius: 50%;
    }

    .overlay-bottom {
        display: flex;
        justify-content: space-evenly;
        gap: 0.5rem;
    }

    .overlay-btn {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        padding: 0.4rem 0.6rem;
        color: white;
        font-size: 1.2rem;
        cursor: pointer;
    }

    .overlay-btn:hover {
        background: rgba(255, 255, 255, 0.4);
    }

    .lightbox-close {
        position: absolute;
        top: 1rem;
        right: 1rem;
        font-size: 2rem;
    }

    .lightbox-close {
        background: rgba(255, 255, 255, 0.1);
        border: 2px solid white;
        color: white;
        padding: 0.5rem 1rem;
        font-size: 1.25rem;
        cursor: pointer;
        border-radius: 6px;
    }

    .lightbox-overlay {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.9);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 10000;
        flex-direction: column;
    }

    .lightbox-overlay.active {
        display: flex;
    }

    .lightbox-image {
        max-width: 90vw;
        max-height: 80vh;
        object-fit: contain;
        border-radius: 4px;
        margin-bottom: 1rem;
    }

    .lightbox-controls {
        display: flex;
        gap: 1rem;
    }

    .lightbox-btn {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        padding: 0.6rem 1rem;
        color: white;
        font-size: 1.2rem;
        cursor: pointer;
    }

    .lightbox-btn:hover {
        background: rgba(255, 255, 255, 0.4);
    }

    .tag-list {
        margin-top: 0.5rem;
        display: flex;
        flex-wrap: wrap;
        gap: 0.25rem;
        justify-content: flex-start;
    }

    .tag-pill {
        background-color: rgba(255, 255, 255, 0.5);
        color: white;
        padding: 0.2rem 0.5rem;
        border-radius: 999px;
        font-size: 0.6rem;
    }

    .tag-pill.empty {
        opacity: 0.6;
    }

    a.download-link {
        display: contents;
    }
</style>

</style>
<main class="gallery-container">
    <% if (media.length === 0) { %>
    <p>No hay im√°genes todav√≠a. ¬°S√© el primero en subir una!</p>
    <% } else { %>
    <div class="media-grid">
        <% media.forEach((item, index) => { %>
        <div class="media-item" id="media-item-<%=item.id%>">
            <a href="<%= item.url %>" class="gallery-item" data-media-id="<%= item.id %>" data-index="<%= index %>">
                <img class="media-item-image" src="<%= item.thumbnail_url %>" alt="Uploaded image">
            </a>
            <div class="overlay" onclick="openLightbox(<%-index%>)">
                <!-- <div class="overlay-top">
                    <img id="avatar-head" src="/images/avatars/thumbs/<%= item.uploader_avatar %>"
                        alt="<%= item.uploader_name %>" title="<%= item.uploader_name %>">
                </div> -->
                <div class="overlay-bottom">
                    <button onclick="event.stopPropagation();openLightbox(<%-index%>)" class="overlay-btn"
                        title="Play">‚ñ∂Ô∏è</button>
                    <div id="like-button-container-<%= item.id %>">
                        <%- include('./like-button-gallery',{
                        mediaId: item.id,
                        liked: item.userLiked,
                        count: item.likesCount
                    })%>
                    </div>
                    <a href="<%-item.url%>" download class="download-link">
                        <button class="overlay-btn" onclick="event.stopPropagation();" title="Download">‚¨áÔ∏è</button>
                    </a>
                    <% if (currentUser.id === item.user_id || currentUser.role == 'admin') { %>
                    <button class="overlay-btn" onclick="event.stopPropagation();" title="Edit Tags"
                        hx-get="/trips/<%-currentOrUpcomingTrip.slug%>/gallery/<%=item.id %>/tags/edit"
                        hx-target="#tag-editor-<%= item.id %>" hx-swap="innerHTML">
                        üè∑Ô∏è
                    </button>
                    <button class="overlay-btn" title="Delete Image" onclick="event.stopPropagation();"
                        hx-delete="/trips/<%-currentOrUpcomingTrip.slug%>/gallery/<%=item.id %>/delete"
                        hx-swap="outerHTML" hx-target="closest .media-item" hx-confirm="Seguro de borrar este item?">
                        ‚ùå
                    </button>
                    <% } %>
                </div>
                <div id="tag-editor">
                    <!-- üß© Placeholder for tag editor form -->
                    <br>
                    <div id="tag-editor-<%= item.id %>">
                        <div class="tag-list" id="tag-editor-<%= item.id %>">
                            <% if (item.tags && item.tags.length > 0) { %>
                            <% item.tags.split(',').forEach(tag => { %>
                            <span class="tag-pill"><%= tag.trim() %></span>
                            <% }) %>
                            <% } else { %>
                            <span class="tag-pill empty">No tags</span>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <% }) %>
    </div>

    <!-- Lightbox -->
    <div class="lightbox-overlay" id="lightbox">
        <button id="lightbox-close" class="lightbox-close" aria-label="Cerrar">&times;</button>

        <img id="lightbox-img" class="lightbox-image" src="" alt="Expanded media" />
        <div class="lightbox-controls">
            <button class="lightbox-btn" id="lightbox-prev">‚èÆ</button>
            <a id="lightbox-download" href="#" class="download-link" download>
                <button class="lightbox-btn" title="Download">‚¨áÔ∏è</button>
            </a>
            <button class="lightbox-btn" id="lightbox-like-button"></button>
            <!-- 
            this button has to be hidden or shown according to
            document.getElementById('lightbox-metadata').dataset.isOwner
            -->
            <button class="lightbox-btn" id="lightbox-delete-button">‚ùå</button>
            <button class="lightbox-btn" id="lightbox-next">‚è≠</button>
        </div>
        <div id="lightbox-meta"></div>
    </div>

    <script>
        const mediaItems = Array.from(document.querySelectorAll('.gallery-item'));
        const lightbox = document.getElementById('lightbox');
        const lightboxImg = document.getElementById('lightbox-img');
        let currentIndex = -1;

        function stringNumberToBoolean(stringNumber) {
            return Boolean(Number(stringNumber));
        }

        function stringToBoolean(string) {
            return Boolean(string);
        }

        async function openLightbox(index) {
            // When openLightbox(index) is called, fire an HTMX request to /media/:id/lightbox-data
            // Use hx-target to inject into a #lightbox-meta container
            const mediaId = mediaItems[index].dataset.mediaId;
            await htmx.ajax('GET', `/trips/<%= currentOrUpcomingTrip.slug %>/gallery/${mediaId}/lightbox-data`, { target: '#lightbox-meta' });

            const meta = document.getElementById('lightbox-metadata').dataset;
            // now according to the data in #lightbox-container i must make some modifications
            // const userLiked = Boolean(Number(document.getElementById('lightbox-meta-userLiked').value));
            const userLiked = stringNumberToBoolean(meta.liked);
            const lightboxLikeButton = document.getElementById('lightbox-like-button');
            if (userLiked) {
                lightboxLikeButton.innerHTML = "‚ù§Ô∏è"
            }
            else {
                lightboxLikeButton.innerHTML = "ü§ç"
            }
            const itemUrl = meta.mediaUrl;
            document.getElementById('lightbox-download').href = itemUrl;

            // this comment is here to show the 'unrendered' version of the 'if'
            // if (stringNumberToBoolean(meta.mediaOwner) || <%= currentUser.role === 'admin' %>) {
            if (stringNumberToBoolean(meta.mediaOwner) || <%= currentUser.role === 'admin' %>) {
                document.getElementById('lightbox-delete-button').style.display = 'block'
            }
            else {
                document.getElementById('lightbox-delete-button').style.display = 'none'
            }

            currentIndex = index;
            const link = mediaItems[currentIndex];
            const fullUrl = link.getAttribute('href');
            lightboxImg.src = fullUrl;
            lightbox.classList.add('active');
        }

        function closeLightbox() {
            lightbox.classList.remove('active');
            lightboxImg.src = '';
        }

        function showNext() {
            if (currentIndex < mediaItems.length - 1) openLightbox(currentIndex + 1);
        }

        function showPrev() {
            if (currentIndex > 0) openLightbox(currentIndex - 1);
        }

        async function deleteMediaItem() {
            const meta = document.getElementById('lightbox-metadata').dataset;
            const mediaId = meta.mediaId;
            const url = `/trips/<%= currentOrUpcomingTrip.slug %>/gallery/${mediaId}/delete`;
            const options = { target: `#media-item-${mediaId}`, swap: 'outerHTML' };
            try {
                await htmx.ajax('DELETE', url, options);
            }
            catch (error) {
                showToast('Error deleting media item: ' + error, 'error')
            }
        }

        async function likeToggle() {
            const meta = document.getElementById('lightbox-metadata').dataset;
            const mediaId = meta.mediaId;
            const url = `/trips/<%= currentOrUpcomingTrip.slug %>/gallery/${mediaId}/like`;
            const options = { target: `#like-button-container-${mediaId}`, swap: 'innerHTML' };
            try {
                await htmx.ajax('POST', url, options);
                const userLiked = stringNumberToBoolean(meta.liked);
                const lightboxLikeButton = document.getElementById('lightbox-like-button');
                if (userLiked) {
                    lightboxLikeButton.innerHTML = "ü§ç"
                }
                else {
                    lightboxLikeButton.innerHTML = "‚ù§Ô∏è"
                }
            } catch (err) {
                showToast('Error toggling like', 'error');
            }
        }

        mediaItems.forEach((item, idx) => {
            item.addEventListener('click', (e) => {
                e.preventDefault();
                openLightbox(idx);
            });
        });

        document.getElementById('lightbox-next').addEventListener('click', showNext);
        document.getElementById('lightbox-prev').addEventListener('click', showPrev);
        document.getElementById('lightbox-like-button').addEventListener('click', likeToggle);
        document.getElementById('lightbox-delete-button').addEventListener('click', () => {
            deleteMediaItem();
            closeLightbox();
        });

        document.addEventListener('keydown', (e) => {
            if (!lightbox.classList.contains('active')) return;
            if (e.key === 'ArrowRight') showNext();
            if (e.key === 'ArrowLeft') showPrev();
            if (e.key === 'Escape') closeLightbox();
        });

        lightbox.addEventListener('click', (e) => {
            if (e.target === lightbox) closeLightbox();
        });
    </script>
    <% } %>
</main>
<%- include('../../partials/footer') %>