<%- include('../../partials/header/feed-current-upcoming') %>

<div class="layout">
    <aside class="sidebar left">
        <!-- e.g. Profile / Trip Switcher -->
        <%- include('./sidebar-left', { trips, trip }) %>
    </aside>

    <main class="feed">
        <!-- Everything related to creating a new post -->
        <div id="post-controls" class="mobile-only">
            <button class="button showPostForm" style="margin-bottom: 20px;">+ Nuevo</button>
        </div>

        <!-- Post list container -->
        <div id="posts-container">
            <% if (posts.length === 0) { %>
            <p>No posts yet for this trip. Be the first to share!</p>
            <% } else { %>
            <!-- Initial posts -->
            <% posts.forEach(post => { %>
            <%- include('./post', { trip, post }) %>
            <% }) %>
            <% } %>
        </div>

        <!-- Post ID-based pagination -->
        <% if (theresMore) { %>
        <div style="text-align: center; padding: 20px;">
            <input type="hidden" id="exclude-ids" name="exclude_ids" value="" />
            <button id="load-more-btn" hx-get="/trips/<%= trip.slug %>/feed/more" hx-include="#exclude-ids"
                hx-target="#posts-container" hx-swap="beforeend" class="button">
                Cargar m√°s posteos
            </button>
            <p>Debug: loaded posts = <span id="loaded-count">0</span></p>
        </div>
        <% } %>

        <%- include('../../partials/lightbox-standalone') %>

    </main>


    <aside class="sidebar right">
        <!-- e.g. Suggested posts / About Ratambuzza -->
        <%- include('./sidebar-right', { trips, trip }) %>
    </aside>
</div>

<script>

    // Function to collect all post IDs currently shown
    function updateExcludeIds() {
        const postsContainer = document.getElementById('posts-container');
        const mainPosts = postsContainer.querySelectorAll('[data-post-id]');
        // Combine both sets of posts
        const allPostElements = [...mainPosts];
        const postIds = allPostElements.map(el => el.getAttribute('data-post-id'));

        console.log('üìä Collecting post IDs:');
        console.log('  - Main container posts:', Array.from(mainPosts).map(el => el.getAttribute('data-post-id')));
        console.log('  - Combined:', postIds);

        // document.getElementById('exclude-ids').value = postIds.join(',');
        const input = document.getElementById('exclude-ids');
        if (input) {
            input.value = postIds.join(',');
        }
        const loadedCount = document.getElementById('loaded-count');
        if (loadedCount) {
            loadedCount.textContent = postIds.length;
        }
        return postIds;
    }

    document.body.addEventListener('htmx:afterSwap', (evt) => {
        // Handle post addition - this fires AFTER the DOM is updated
        if (evt.target.id === 'posts-container') {

            setupFeedPostLightbox();

            document.getElementById('postModal')?.classList.add('hidden')
            console.log('‚ûï Post added and DOM updated ‚Äî updating exclude IDs');

            // Debug: check what was actually added
            const newPostElement = evt.target.querySelector('[data-post-id]');
            if (newPostElement) {
                console.log('‚úÖ Found new post with ID:', newPostElement.getAttribute('data-post-id'));
            } else {
                console.log('‚ùå No data-post-id found in new post!');
                console.log('üîç New post HTML:', evt.target.innerHTML.substring(0, 200));
            }

            setTimeout(() => updateExcludeIds(), 50);
        }
    });

    document.body.addEventListener('htmx:afterRequest', (evt) => {
        // Handle post deletion 
        if (evt.detail?.requestConfig?.elt?.closest('form')?.classList?.contains('delete-post-form')) {
            console.log('üóë Post deleted ‚Äî updating exclude IDs');
            setTimeout(() => updateExcludeIds(), 50);
        }
    })

    // Initialize exclude IDs on page load - collect initial posts
    updateExcludeIds();

    document.body.addEventListener('htmx:beforeRequest', (evt) => {
        if (evt.target.id === 'load-more-btn') {
            console.log('üöÄ Load More clicked!');
            const excludeIds = document.getElementById('exclude-ids').value;
            console.log('  - Exclude IDs:', excludeIds);
            console.log('  - Exclude IDs length:', excludeIds.length);
            console.log('  - URL:', evt.target.getAttribute('hx-get'));

            // Debug: also show what posts are currently visible
            const postElements = document.querySelectorAll('[data-post-id]');
            console.log('  - Visible posts count:', postElements.length);
            console.log('  - Visible post IDs:', Array.from(postElements).map(el => el.getAttribute('data-post-id')));

            evt.target.textContent = 'Loading...';
        }
    });

    document.body.addEventListener('htmx:afterRequest', (evt) => {
        if (evt.target.id === 'load-more-btn') {
            console.log('üì¶ Got response! Status:', evt.detail.xhr.status);

            // Check if the response indicates no more posts
            const responseText = evt.detail.xhr.responseText;
            if (responseText.includes('data-no-more-posts="true"')) {
                console.log('‚ùå No more posts available - disabling button');
                evt.target.disabled = true;
                evt.target.textContent = 'No More Posts';
                evt.target.style.background = '#ccc';
                evt.target.style.cursor = 'not-allowed';
                return;
            }

            // Update exclude IDs after new posts are loaded
            setTimeout(() => updateExcludeIds(), 50);
            evt.target.textContent = 'Cargar m√°s posteos';
        }
    });
</script>

<div id="postModal" class="modal hidden">
    <div class="modal-content">
        <button id="closePostModal" class="modal-close">‚úñ</button>
        <%- include('./new-post-form', { trip }) %>
    </div>
</div>
<script>
    // Handle all open buttons
    document.querySelectorAll('.showPostForm').forEach((btn) => {
        btn.addEventListener('click', () => {
            document.getElementById('postModal')?.classList.remove('hidden');
            document.getElementById('new-post-content')?.focus();
        });
    });

    // Handle modal close
    document.getElementById('closePostModal')?.addEventListener('click', () => {
        document.getElementById('postModal')?.classList.add('hidden');
    });

    const modal = document.getElementById('postModal')

    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            modal?.classList.add('hidden')
        }
    })
</script>

<script>
    function setupFeedPostLightbox() {
        // Loop over each post container
        document.querySelectorAll('.post-images').forEach(postEl => {
            const thumbs = Array.from(postEl.querySelectorAll('.post-image-thumb'));
            if (thumbs.length === 0) return;

            const items = thumbs.map(el => ({
                url: el.dataset.full,
                id: el.dataset.id,
            }));

            thumbs.forEach((el, i) => {
                el.addEventListener('click', () => {
                    initLightbox(items);
                    openLightbox(i);
                });
            });
        });
    }

    document.addEventListener('DOMContentLoaded', setupFeedPostLightbox);

</script>
<%- include('../../partials/footer') %>