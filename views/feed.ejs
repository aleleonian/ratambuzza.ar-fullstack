<%- include('partials/header') %>

<div class="layout">
    <aside class="sidebar left">
        <!-- e.g. Profile / Trip Switcher -->
        <%- include('partials/sidebar-left', { trips, trip }) %>
    </aside>

    <main class="feed">
        <h2><%= trip.name %></h2>

        <!-- Injected post (new post via HTMX) -->
        <div id="post-inject-point"></div>

        <!-- Post list container -->
        <div id="posts-container">
            <% if (posts.length === 0) { %>
            <p>No posts yet for this trip. Be the first to share!</p>
            <% } else { %>
            <!-- Initial posts -->
            <% posts.forEach(post => { %>
            <%- include('partials/post', { post }) %>
            <% }) %>
            <% } %>
        </div>

        <!-- Fixed: Use hidden input for dynamic offset -->
        <% if (moreUrl) { %>
        <div style="text-align: center; padding: 20px;">
            <input type="hidden" id="current-offset" name="current-offset" value="<%= POSTS_PER_PAGE %>" />
            <input type="hidden" id="trip-id" name="trip-id" value="<%= trip.id %>" />
            <div 
                id="scroll-sentinel"
                style="height: 50px; display: flex; align-items: center; justify-content: center; background: #f0f0f0; border: 1px solid #ddd; margin: 20px 0;"
            >
                <p>Loading more posts...</p>
            </div>
            <p>Debug: offset = <span id="offset-display"><%= POSTS_PER_PAGE %></span></p>
        </div>
        <% } %>
    </main>


    <aside class="sidebar right">
        <!-- e.g. Suggested posts / About Ratambuzza -->
        <%- include('partials/sidebar-right') %>
    </aside>
</div>

<script>
    const modal = document.getElementById('postModal')
    const openBtn = document.getElementById('showPostForm')
    const closeBtn = document.getElementById('closePostModal')

    openBtn?.addEventListener('click', () => {
        modal.classList.remove('hidden')
    })

    closeBtn?.addEventListener('click', () => {
        modal.classList.add('hidden')
    })

    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            modal?.classList.add('hidden')
        }
    })

    document.body.addEventListener('htmx:afterRequest', (evt) => {
        // Close modal after post form submission
        if (evt.target.closest('form')?.id === 'newPostForm') {
            document.getElementById('postModal')?.classList.add('hidden')
        }
    })

    // Infinite scroll with Intersection Observer
    let currentOffset = <%= POSTS_PER_PAGE %>;
    let isLoading = false;
    const tripId = <%= trip.id %>;

    console.log('üîß Setup - currentOffset:', currentOffset, 'tripId:', tripId);

    // Function to load more posts
    async function loadMorePosts() {
        if (isLoading) return;
        isLoading = true;

        const sentinel = document.getElementById('scroll-sentinel');
        if (!sentinel) return;

        sentinel.innerHTML = '<p>Loading...</p>';
        console.log('üöÄ Loading posts at offset:', currentOffset);

        try {
            const response = await fetch(`/feed/more?current-offset=${currentOffset}&trip-id=${tripId}`);
            const html = await response.text();

            console.log('üì¶ Got response, length:', html.length);

            if (html.includes('data-no-more-posts="true"')) {
                console.log('‚ùå No more posts available');
                sentinel.style.display = 'none';
                return;
            }

            // Add new posts to container
            const postsContainer = document.getElementById('posts-container');
            postsContainer.insertAdjacentHTML('beforeend', html);

            // Update offset
            currentOffset += 1;
            document.getElementById('current-offset').value = currentOffset;
            document.getElementById('offset-display').textContent = currentOffset;

            console.log('üîÑ Updated offset to:', currentOffset);
            sentinel.innerHTML = '<p>Loading more posts...</p>';

        } catch (error) {
            console.error('‚ùå Error loading posts:', error);
            sentinel.innerHTML = '<p>Error loading posts</p>';
        } finally {
            isLoading = false;
        }
    }

    // Set up Intersection Observer
    const sentinel = document.getElementById('scroll-sentinel');
    if (sentinel) {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting && !isLoading) {
                    console.log('üìç Sentinel visible, loading more...');
                    loadMorePosts();
                }
            });
        }, {
            threshold: 0.1
        });

        observer.observe(sentinel);
        console.log('üëÄ Intersection Observer set up');
    }
</script>


<%- include('partials/footer') %>