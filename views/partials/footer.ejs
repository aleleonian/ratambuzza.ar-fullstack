</main>


<% if (!['/login'].includes(currentPath)) { %>
<footer class="footer">
    <p>© <span id="year">2025</span> Ratambuzza.ar · <span class="muted">Un progama hecho con ❤️</span></p>
</footer>
<% } %>

<!-- Hook into HTMX’s global lifecycle events for spinner purposes -->
<script>
    document.body.addEventListener('htmx:configRequest', () => {
        document.getElementById('loading-overlay').classList.remove('hidden');
    });

    document.body.addEventListener('htmx:afterRequest', () => {
        document.getElementById('loading-overlay').classList.add('hidden');
    });

    // Let's simulate an active state in buttons with class .button:

    document.querySelectorAll('.button').forEach(btn => {
        btn.addEventListener('touchstart', () => btn.classList.add('active'));
        btn.addEventListener('touchend', () => btn.classList.remove('active'));
    });

</script>

<!-- Toaster  -->
<!-- Toast container -->
<div id="toast-container" style="position: fixed; bottom: 2rem; left: 50%; transform: translateX(-50%);
            padding: 1rem 1.5rem; border-radius: 6px; font-size: 1rem;
            display: none; z-index: 11000; color: white; min-width: 200px; text-align: center;">
</div>


<script>
    // Listen for HTMX response headers
    document.body.addEventListener('htmx:afterOnLoad', function (evt) {
        const xhr = evt.detail.xhr;
        const msg = xhr.getResponseHeader('X-Toast');
        const type = xhr.getResponseHeader('X-Toast-Type') || 'info';
        if (msg) showToast(msg, type);
    });
</script>

<!-- 
From your server route: send this header to trigger a toast

res.setHeader('X-Toast', 'Tags updated successfully!');
res.setHeader('X-Toast-Type', 'success');
res.send(/* partial, etc. */);


or from the front-end:

showToast('Image saved!', 'success');
showToast('Something went wrong.', 'error');

-->

</body>

</html>