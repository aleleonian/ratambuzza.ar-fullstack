<aside class="sidebar-right">

  <!-- Everything related to creating a new post -->
  <div id="post-controls">
    <button class="button showPostForm" id="new-post-button-desktop" style="margin-bottom: 20px; width:100%">+ Nuevo Posteo</button>
  </div>

  <!-- <ul>
    <li>
      most popular posts would be nice
    </li>
  </ul> -->

  <!-- Quote of the Day -->
  <!-- <div class="quote-box">
    <blockquote>"No nos fuimos, nos mandaron."</blockquote>
    <footer>— Charly</footer>
  </div> -->

  <!-- Online Users -->
  <!-- <div class="online-box" style="margin-top: 24px;">
    <strong>Online now:</strong>
    <ul>
      <li>🧢 @ElPapu</li>
      <li>🎩 @Latigo</li>
      <li>🐻 @Osopardo</li>
    </ul>
  </div> -->

  <!-- Emoji Moodboard -->
  <!-- <div class="emoji-board" style="margin-top: 24px; font-size: 20px;">
    😂 😎 🐒 🍺 🎶
  </div> -->
</aside>

<script>
  const tomSelectInstances = {};

  function initTomSelect() {
    // Clean up any existing instances before re-initializing
    for (const key in tomSelectInstances) {
      tomSelectInstances[key].destroy();
      delete tomSelectInstances[key];
    }

    // AVATAR SELECT
    const userFilterel = document.querySelector('#user-filter');
    if (userFilterel) {
      const options = [...userFilterel.options].map(opt => ({
        value: opt.value,
        text: opt.textContent,
        customProperties: JSON.parse(opt.dataset.customProperties || '{}')
      }));

      tomSelectInstances['user-filter'] = new TomSelect(userFilterel, {
        maxItems: 1,
        options,
        valueField: "value",
        labelField: "text",
        searchField: "text",
        plugins: ['remove_button'],
        render: {
          option_create: function (data, escape) {
            return '<div class="create">➕ Usar "' + escape(data.input) + '" como nueva acción</div>';
          },
          no_results: function (data, escape) {
            return '';
          }
        },
      });
    }
    const userFilterMobileEl = document.querySelector('#user-filter-mobile');
    if (userFilterMobileEl) {
      const options = [...userFilterMobileEl.options].map(opt => ({
        value: opt.value,
        text: opt.textContent,
        customProperties: JSON.parse(opt.dataset.customProperties || '{}')
      }));

      tomSelectInstances['user-filter-mobile'] = new TomSelect(userFilterMobileEl, {
        maxItems: 1,
        options,
        valueField: "value",
        labelField: "text",
        searchField: "text",
        plugins: ['remove_button'],
        render: {
          option_create: function (data, escape) {
            return '<div class="create">➕ Usar "' + escape(data.input) + '" como nueva acción</div>';
          },
          no_results: function (data, escape) {
            return '';
          }
        },
      });
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    initTomSelect(); // Initial render
  });
</script>