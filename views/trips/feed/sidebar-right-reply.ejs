<aside class="sidebar-right">

    <!-- Everything related to creating a new post -->
    <div id="post-controls">
        <button class="button showPostForm" style="margin-bottom: 20px; width:100%">+ Nueva Respuesta</button>
    </div>

    <br>

    <!-- <div id="feed-search" style="margin-bottom: 20px;">
        <form id="search-form" hx-get="/trips/<%= trip.slug %>/feed" hx-target="#posts-container" hx-swap="innerHTML"
            hx-trigger="submit" hx-indicator="#search-loading"
            style="display: flex; flex-direction: column; gap: 12px;">

            <input type="text" id="search-text" name="search" placeholder="Buscar en posts..."
                value="<%= typeof search !== 'undefined' ? search : '' %>" class="pixel-input"
                style="padding: 10px; border: 1px solid #aaa; border-radius: 6px; font-size: 14px; width: 100%;">

            <select id="user-filter" name="user"
                style="padding: 10px; border: 1px solid #aaa; border-radius: 6px; font-size: 14px;">
                <option value="">Por autor</option>
                <% if (typeof tripUsers !== 'undefined') { %>
                <% tripUsers.forEach(user => { %>
                <option value="<%= user.id %>"
                    <%= (typeof userFilter !== 'undefined' && userFilter == user.id) ? 'selected' : '' %>>
                    <%= user.handle %>
                </option>
                <% }) %>
                <% } %>
            </select>

            <div style="display: flex; gap: 10px;">
                <button type="submit" class="button" style="flex: 1;">
                    🔍 Buscar
                    <span id="search-loading" class="htmx-indicator" style="display: none;">⏳</span>
                </button>

                <button type="button" id="clear-filters" class="button button-smaller"
                    style="flex: 1; background-color: #ccc;">
                    Limpiar filtros
                </button>
            </div>
        </form>
    </div> -->

    <!-- Quote of the Day -->
    <!-- <div class="quote-box">
    <blockquote>"No nos fuimos, nos mandaron."</blockquote>
    <footer>— Charly</footer>
  </div> -->

    <!-- Online Users -->
    <!-- <div class="online-box" style="margin-top: 24px;">
    <strong>Online now:</strong>
    <ul>
      <li>🧢 @ElPapu</li>
      <li>🎩 @Latigo</li>
      <li>🐻 @Osopardo</li>
    </ul>
  </div> -->

    <!-- Emoji Moodboard -->
    <!-- <div class="emoji-board" style="margin-top: 24px; font-size: 20px;">
    😂 😎 🐒 🍺 🎶
  </div> -->
</aside>

<script>
    const tomSelectInstances = {};

    function initTomSelect() {
        // Clean up any existing instances before re-initializing
        for (const key in tomSelectInstances) {
            tomSelectInstances[key].destroy();
            delete tomSelectInstances[key];
        }

        // AVATAR SELECT
        const userFilterel = document.querySelector('#user-filter');
        if (userFilterel) {
            const options = [...userFilterel.options].map(opt => ({
                value: opt.value,
                text: opt.textContent,
                customProperties: JSON.parse(opt.dataset.customProperties || '{}')
            }));

            tomSelectInstances['user-filter'] = new TomSelect(userFilterel, {
                maxItems: 1,
                options,
                valueField: "value",
                labelField: "text",
                searchField: "text",
                plugins: ['remove_button'],
                render: {
                    option_create: function (data, escape) {
                        return '<div class="create">➕ Usar "' + escape(data.input) + '" como nueva acción</div>';
                    },
                    no_results: function (data, escape) {
                        return '';
                    }
                },
            });
        }
        const userFilterMobileEl = document.querySelector('#user-filter-mobile');
        if (userFilterMobileEl) {
            const options = [...userFilterMobileEl.options].map(opt => ({
                value: opt.value,
                text: opt.textContent,
                customProperties: JSON.parse(opt.dataset.customProperties || '{}')
            }));

            tomSelectInstances['user-filter-mobile'] = new TomSelect(userFilterMobileEl, {
                maxItems: 1,
                options,
                valueField: "value",
                labelField: "text",
                searchField: "text",
                plugins: ['remove_button'],
                render: {
                    option_create: function (data, escape) {
                        return '<div class="create">➕ Usar "' + escape(data.input) + '" como nueva acción</div>';
                    },
                    no_results: function (data, escape) {
                        return '';
                    }
                },
            });
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        initTomSelect(); // Initial render
    });
</script>